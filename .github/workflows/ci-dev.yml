name: release-dev
concurrency: deploy_dev

on:
  push:
    branches:
      - dev

env:
  TARGET_ACCOUNT_ID: ${{ secrets.DEV_ACCOUNT_ID }}
  APPLICATION_NAME: minecraft
  ENVIRONMENT_NAME: dev
  ARTIFACT_BUCKET: ci-artifacts-${{ secrets.DEVOPS_ACCOUNT_ID }}-us-east-1
  ARTIFACT_PREFIX: minecraft
  CHANGE_SET_NAME: release-${{ github.run_number }}-${{ github.run_attempt }}
  CHANGE_SET_DESCRIPTION: ${{ github.event.head_commit.message }}
  HOSTED_ZONE_NAME: dev.mc.mbarney.me
  DOMAIN_NAME: dev.mc.mbarney.me
  DNS_LOG_GROUP_NAME: /aws/route53/dev.mc.mbarney.me.
  VPC_NAME: mbarney
  MEMORY: 16384
  CPU: 2048
  WATCHDOG_IMAGE_URI: ${{ secrets.DEVOPS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/minecraft-ondemand-watchdog:0.0.9
  OVERVIEWER_IMAGE_URI: ${{ secrets.DEVOPS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/minecraft-overviewer-renderer:0.0.3
  MINECRAFT_VERSION: '1.19.1'
  MINECRAFT_SEED: '-7390720122552741106'
  MINECRAFT_OPS: Lexicham\,Lexicam
  MINECRAFT_MOTD: '\u00a7bWelcome to the\u00a7e Salty Spatoon\u00a7r\n\u00a7oHow tough are ya?'

permissions:
  id-token: write
  contents: write
  packages: read

jobs:
  test:
    runs-on: ubuntu-latest
    container: ghcr.io/mbarneyjr/ci-docker-image:latest
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          make dependencies
      - name: lint
        run: |
          make lint
  package:
    needs: test
    runs-on: ubuntu-latest
    container: ghcr.io/mbarneyjr/ci-docker-image:latest
    steps:
      - uses: actions/checkout@v3
      - name: Assume role
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::${{ secrets.DEVOPS_ACCOUNT_ID }}:role/github-actions
          role-session-name: GitHubActions-${{ github.run_id }}
      - name: Package Code
        run: |
          make package
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.APPLICATION_NAME }}-${{ github.run_id }}
          path: artifacts/
  deploy_dev:
    needs: package
    runs-on: ubuntu-latest
    container: ghcr.io/mbarneyjr/ci-docker-image:latest
    environment: dev
    steps:
      - uses: actions/checkout@v3
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.APPLICATION_NAME }}-${{ github.run_id }}
          path: artifacts/
      - name: Assume role
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::${{ env.TARGET_ACCOUNT_ID }}:role/github-actions
          role-session-name: GitHubActions-${{ github.run_id }}
      - id: create_change_set
        name: Create Change Set
        run: |
          make create-change-set
          export CHANGE_SET_STATUS_REASON="$(cat artifacts/${STACK_NAME}-${CHANGE_SET_NAME}.json | jq -r .StatusReason)"
          if [[ "$CHANGE_SET_STATUS_REASON" == "The submitted information didn't contain changes. Submit different information to create a change set." ]];
          then
            echo "no_changes=true" >> $GITHUB_OUTPUT
          fi;
      - name: Execute Change Set
        if: ${{ steps.create_change_set.outputs.no_changes != 'true' }}
        run: |
          make deploy-change-set

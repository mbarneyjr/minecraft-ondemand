AWSTemplateFormatVersion: '2010-09-09'
Description: Minecraft Map Hosting


Parameters:
  ApplicationName:
    Type: String
    Description: The name of the application
  EnvironmentName:
    Type: String
    Description: The name of the environment
  HostedZoneName:
    Type: String
  DomainName:
    Type: String


Resources:
  MapBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${ApplicationName}-${EnvironmentName}-map
      VersioningConfiguration:
        Status: Enabled
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerPreferred

  SslCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Ref DomainName
      SubjectAlternativeNames:
        - !Sub '*.${DomainName}'
      ValidationMethod: DNS
      DomainValidationOptions:
        - DomainName: !Ref DomainName
          HostedZoneId: !Sub '{{resolve:ssm:/dns/${HostedZoneName}/hosted-zone-id}}'

  MapDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        Comment: !Sub ${ApplicationName}-${EnvironmentName}
        HttpVersion: http2
        Aliases:
          - !Ref DomainName
        ViewerCertificate:
          AcmCertificateArn: !Ref SslCertificate
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2019
        DefaultRootObject: index.html
        Origins:
          - Id: !Ref MapBucket
            DomainName: !Sub ${MapBucket.RegionalDomainName}
            S3OriginConfig:
              OriginAccessIdentity: !Sub origin-access-identity/cloudfront/${Oai}
        DefaultCacheBehavior:
          TargetOriginId: !Ref MapBucket
          ViewerProtocolPolicy: redirect-to-https
          CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad # caching disabled
          FunctionAssociations:
            - FunctionARN: !GetAtt MapRedirect.FunctionARN
              EventType: viewer-request

  MapRedirect:
    Type: AWS::CloudFront::Function
    Properties:
      Name: !Sub ${ApplicationName}-${EnvironmentName}-redirect
      AutoPublish: true
      FunctionConfig:
        Runtime: cloudfront-js-1.0
        Comment: cloudfront redirect function
      FunctionCode: |
        function handler(event) {
          console.log(`Event: ${JSON.stringify(event)}`);
          var request = event.request;
          var uri = event.request.uri;
          if (uri.endsWith('/')) {
            // check whether the URI is missing a file name
            request.uri += 'index.html';
          } else if (!uri.includes('.')) {
            // check whether the URI is missing a file extension
            request.uri += '/index.html';
          }
          console.log(`Result: ${JSON.stringify(request)}`);
          return request;
        }

  Oai:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: OAI for Static S3 Website-Better AWS Service Availability

  MapBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref MapBucket
      PolicyDocument:
        Id: S3-OAI-Policy
        Statement:
          - Effect: Allow
            Principal:
              CanonicalUser: !Sub ${Oai.S3CanonicalUserId}
            Action: s3:GetObject
            Resource: !Sub ${MapBucket.Arn}/*

  MapDnsRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      Type: A
      AliasTarget:
        DNSName: !Sub ${MapDistribution.DomainName}
        HostedZoneId: Z2FDTNDATAQYW2
      Name: !Ref DomainName
      HostedZoneName: !Sub ${HostedZoneName}.


Outputs:
  MapBucketName:
    Description: Name of the S3 bucket that contains the map assets
    Value: !Ref MapBucket
  MapBucketArn:
    Description: ARN of the S3 bucket that contains the map assets
    Value: !GetAtt MapBucket.Arn
